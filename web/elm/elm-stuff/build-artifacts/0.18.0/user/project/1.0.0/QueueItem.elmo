var _user$project$QueueItem$ShiftDown = {ctor: 'ShiftDown'};
var _user$project$QueueItem$ShiftUp = {ctor: 'ShiftUp'};
var _user$project$QueueItem$Remove = {ctor: 'Remove'};
var _user$project$QueueItem$selectedOptionsHtml = function (model) {
	return A2(
		_elm_lang$html$Html$p,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('queue-item-option'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$QueueItem$Remove),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(_jystic$elm_font_awesome$FontAwesome$arrow_left, _elm_lang$core$Color$white, 25),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$QueueItem$ShiftDown),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(_jystic$elm_font_awesome$FontAwesome$arrow_down, _elm_lang$core$Color$white, 25),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$QueueItem$ShiftUp),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(_jystic$elm_font_awesome$FontAwesome$arrow_up, _elm_lang$core$Color$white, 25),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$QueueItem$Reset = {ctor: 'Reset'};
var _user$project$QueueItem$ItemDoubleClicked = {ctor: 'ItemDoubleClicked'};
var _user$project$QueueItem$ItemClicked = {ctor: 'ItemClicked'};
var _user$project$QueueItem$view = F3(
	function (isCurrentSong, id, model) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('queue-item'),
				_1: {
					ctor: '::',
					_0: _user$project$MyStyle$currentSong(isCurrentSong),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onDoubleClick(_user$project$QueueItem$ItemDoubleClicked),
						_1: {
							ctor: '::',
							_0: _user$project$MyStyle$mouseOver(model.isMouseOver),
							_1: {
								ctor: '::',
								_0: model.isSelected ? _elm_lang$html$Html_Attributes$class('selected') : _elm_lang$html$Html_Attributes$class('not-selected'),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: model.isSelected ? _user$project$QueueItem$selectedOptionsHtml(model) : A2(
					_elm_lang$html$Html$p,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(''),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onMouseDown(_user$project$QueueItem$ItemClicked),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('queue-item-title'),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									model.song.title,
									A2(_elm_lang$core$Basics_ops['++'], ' - ', model.song.artist))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$QueueItem$ShiftItemDown = {ctor: 'ShiftItemDown'};
var _user$project$QueueItem$ShiftItemUp = {ctor: 'ShiftItemUp'};
var _user$project$QueueItem$RemoveItem = {ctor: 'RemoveItem'};
var _user$project$QueueItem$Clicked = {ctor: 'Clicked'};
var _user$project$QueueItem$DoubleClicked = {ctor: 'DoubleClicked'};
var _user$project$QueueItem$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'ItemClicked':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isSelected: !model.isSelected}),
					_1: _elm_lang$core$Maybe$Just(_user$project$QueueItem$Clicked)
				};
			case 'ItemDoubleClicked':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$core$Maybe$Just(_user$project$QueueItem$DoubleClicked)
				};
			case 'Reset':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isSelected: false}),
					_1: _elm_lang$core$Maybe$Nothing
				};
			case 'Remove':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$core$Maybe$Just(_user$project$QueueItem$RemoveItem)
				};
			case 'ShiftUp':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$core$Maybe$Just(_user$project$QueueItem$ShiftItemUp)
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$core$Maybe$Just(_user$project$QueueItem$ShiftItemDown)
				};
		}
	});
