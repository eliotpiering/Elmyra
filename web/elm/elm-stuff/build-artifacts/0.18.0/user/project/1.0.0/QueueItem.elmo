var _user$project$QueueItem$Pos = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$QueueItem$Reset = {ctor: 'Reset'};
var _user$project$QueueItem$ItemDoubleClicked = {ctor: 'ItemDoubleClicked'};
var _user$project$QueueItem$ItemClicked = {ctor: 'ItemClicked'};
var _user$project$QueueItem$MouseLeave = {ctor: 'MouseLeave'};
var _user$project$QueueItem$MouseEnter = {ctor: 'MouseEnter'};
var _user$project$QueueItem$view = F4(
	function (maybeDragPos, isCurrentSong, id, model) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('song-item'),
				_1: {
					ctor: '::',
					_0: _user$project$MyStyle$currentSong(isCurrentSong),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onMouseDown(_user$project$QueueItem$ItemClicked),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onDoubleClick(_user$project$QueueItem$ItemDoubleClicked),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onMouseEnter(_user$project$QueueItem$MouseEnter),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onMouseLeave(_user$project$QueueItem$MouseLeave),
									_1: {
										ctor: '::',
										_0: _user$project$MyStyle$isSelected(model.isSelected),
										_1: {
											ctor: '::',
											_0: _user$project$MyStyle$mouseOver(model.isMouseOver),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(model.song.title),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: A2(_user$project$MyStyle$dragging, maybeDragPos, model.isSelected),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(model.song.title),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$QueueItem$Clicked = {ctor: 'Clicked'};
var _user$project$QueueItem$MouseEntered = {ctor: 'MouseEntered'};
var _user$project$QueueItem$DoubleClicked = {ctor: 'DoubleClicked'};
var _user$project$QueueItem$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'MouseEnter':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isMouseOver: true}),
					_1: _elm_lang$core$Maybe$Just(_user$project$QueueItem$MouseEntered)
				};
			case 'MouseLeave':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isMouseOver: false}),
					_1: _elm_lang$core$Maybe$Nothing
				};
			case 'ItemClicked':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isSelected: !model.isSelected}),
					_1: _elm_lang$core$Maybe$Just(_user$project$QueueItem$Clicked)
				};
			case 'ItemDoubleClicked':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$core$Maybe$Just(_user$project$QueueItem$DoubleClicked)
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isSelected: false}),
					_1: _elm_lang$core$Maybe$Nothing
				};
		}
	});
