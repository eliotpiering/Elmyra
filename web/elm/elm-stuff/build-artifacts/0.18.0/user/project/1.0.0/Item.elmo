var _user$project$Item$commonHtml = F2(
	function (model, data) {
		return {
			ctor: '::',
			_0: _elm_lang$html$Html$text(data.title),
			_1: {ctor: '[]'}
		};
	});
var _user$project$Item$itemTitleHtml = function (title) {
	return A2(
		_elm_lang$html$Html$p,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background-color', _1: _user$project$MyStyle$darkGrey},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(title),
			_1: {ctor: '[]'}
		});
};
var _user$project$Item$itemTitle = function (model) {
	var _p0 = model.data;
	if (_p0.ctor === 'Song') {
		return _user$project$Item$itemTitleHtml(_p0._0.title);
	} else {
		return _user$project$Item$itemTitleHtml(_p0._0.title);
	}
};
var _user$project$Item$Pos = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$Item$Reset = {ctor: 'Reset'};
var _user$project$Item$RightArrow = {ctor: 'RightArrow'};
var _user$project$Item$selectedOptionsHtml = function (model) {
	return A2(
		_elm_lang$html$Html$p,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'backgroud-color', _1: _user$project$MyStyle$lightGrey},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Item$RightArrow),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(_jystic$elm_font_awesome$FontAwesome$arrow_right, _elm_lang$core$Color$black, 25),
			_1: {ctor: '[]'}
		});
};
var _user$project$Item$selectedItemHtml = F2(
	function (id, model) {
		return A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('selected group-item'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-color', _1: _user$project$MyStyle$darkGrey},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'display', _1: 'flex'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'flex-direction', _1: 'row'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'justify-content', _1: 'space-between'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'align-items', _1: 'center'},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$MyStyle$isSelected(true),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _user$project$Item$itemTitle(model),
				_1: {
					ctor: '::',
					_0: _user$project$Item$selectedOptionsHtml(model),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Item$ItemDoubleClicked = {ctor: 'ItemDoubleClicked'};
var _user$project$Item$ItemClicked = {ctor: 'ItemClicked'};
var _user$project$Item$commonAttrubutes = function (model) {
	return {
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onMouseDown(_user$project$Item$ItemClicked),
		_1: {
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onDoubleClick(_user$project$Item$ItemDoubleClicked),
			_1: {
				ctor: '::',
				_0: _user$project$MyStyle$isSelected(model.isSelected),
				_1: {
					ctor: '::',
					_0: _user$project$MyStyle$mouseOver(model.isMouseOver),
					_1: {ctor: '[]'}
				}
			}
		}
	};
};
var _user$project$Item$itemHtml = F2(
	function (id, model) {
		var _p1 = model.data;
		if (_p1.ctor === 'Song') {
			return A2(
				_elm_lang$html$Html$li,
				A2(
					_elm_lang$core$List$append,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('song-item'),
						_1: {ctor: '[]'}
					},
					_user$project$Item$commonAttrubutes(model)),
				A2(_user$project$Item$commonHtml, model, _p1._0));
		} else {
			return A2(
				_elm_lang$html$Html$li,
				A2(
					_elm_lang$core$List$append,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('group-item'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$id(
								A2(_elm_lang$core$Basics_ops['++'], 'group-item-', id)),
							_1: {ctor: '[]'}
						}
					},
					_user$project$Item$commonAttrubutes(model)),
				A2(_user$project$Item$commonHtml, model, _p1._0));
		}
	});
var _user$project$Item$view = F2(
	function (id, model) {
		return model.isSelected ? A2(_user$project$Item$selectedItemHtml, id, model) : A2(_user$project$Item$itemHtml, id, model);
	});
var _user$project$Item$None = {ctor: 'None'};
var _user$project$Item$AddToQueue = {ctor: 'AddToQueue'};
var _user$project$Item$Clicked = {ctor: 'Clicked'};
var _user$project$Item$DoubleClicked = {ctor: 'DoubleClicked'};
var _user$project$Item$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'ItemClicked':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isSelected: !model.isSelected}),
					_1: _user$project$Item$Clicked
				};
			case 'ItemDoubleClicked':
				return {ctor: '_Tuple2', _0: model, _1: _user$project$Item$DoubleClicked};
			case 'Reset':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isSelected: false}),
					_1: _user$project$Item$None
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isSelected: false}),
					_1: _user$project$Item$AddToQueue
				};
		}
	});
