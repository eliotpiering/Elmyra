var _elm_community$array_extra$Array_Extra$splitAt = F2(
	function (index, xs) {
		var len = _elm_lang$core$Array$length(xs);
		var _p0 = {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.cmp(index, 0) > 0,
			_1: _elm_lang$core$Native_Utils.cmp(index, len) < 0
		};
		if (_p0._0 === true) {
			if (_p0._1 === true) {
				return {
					ctor: '_Tuple2',
					_0: A3(_elm_lang$core$Array$slice, 0, index, xs),
					_1: A3(_elm_lang$core$Array$slice, index, len, xs)
				};
			} else {
				return {ctor: '_Tuple2', _0: xs, _1: _elm_lang$core$Array$empty};
			}
		} else {
			if (_p0._1 === true) {
				return {ctor: '_Tuple2', _0: _elm_lang$core$Array$empty, _1: xs};
			} else {
				return {ctor: '_Tuple2', _0: _elm_lang$core$Array$empty, _1: _elm_lang$core$Array$empty};
			}
		}
	});
var _elm_community$array_extra$Array_Extra$removeAt = F2(
	function (index, xs) {
		var _p1 = A2(_elm_community$array_extra$Array_Extra$splitAt, index, xs);
		var xs0 = _p1._0;
		var xs1 = _p1._1;
		var len1 = _elm_lang$core$Array$length(xs1);
		return _elm_lang$core$Native_Utils.eq(len1, 0) ? xs0 : A2(
			_elm_lang$core$Array$append,
			xs0,
			A3(_elm_lang$core$Array$slice, 1, len1, xs1));
	});
var _elm_community$array_extra$Array_Extra$resizerIndexed = F3(
	function (n, f, xs) {
		var gen = F2(
			function (m, g) {
				return A2(
					_elm_lang$core$Array$indexedMap,
					F2(
						function (i, _p2) {
							return g(i);
						}),
					A2(
						_elm_lang$core$Array$repeat,
						m,
						{ctor: '_Tuple0'}));
			});
		var l = _elm_lang$core$Array$length(xs);
		return (_elm_lang$core$Native_Utils.cmp(l, n) > 0) ? A3(_elm_lang$core$Array$slice, l - n, l, xs) : ((_elm_lang$core$Native_Utils.cmp(l, n) < 0) ? A2(
			_elm_lang$core$Array$append,
			A2(gen, n - l, f),
			xs) : xs);
	});
var _elm_community$array_extra$Array_Extra$resizelIndexed = F3(
	function (n, f, xs) {
		var gen = F2(
			function (m, g) {
				return A2(
					_elm_lang$core$Array$indexedMap,
					F2(
						function (i, _p3) {
							return g(i);
						}),
					A2(
						_elm_lang$core$Array$repeat,
						m,
						{ctor: '_Tuple0'}));
			});
		var l = _elm_lang$core$Array$length(xs);
		return (_elm_lang$core$Native_Utils.cmp(l, n) > 0) ? A3(_elm_lang$core$Array$slice, 0, n, xs) : ((_elm_lang$core$Native_Utils.cmp(l, n) < 0) ? A2(
			_elm_lang$core$Array$append,
			xs,
			A2(
				gen,
				n - l,
				function (_p4) {
					return f(
						function (i) {
							return i + l;
						}(_p4));
				})) : xs);
	});
var _elm_community$array_extra$Array_Extra$resizerRepeat = F3(
	function (n, val, xs) {
		var l = _elm_lang$core$Array$length(xs);
		return (_elm_lang$core$Native_Utils.cmp(l, n) > 0) ? A3(_elm_lang$core$Array$slice, l - n, l, xs) : ((_elm_lang$core$Native_Utils.cmp(l, n) < 0) ? A2(
			_elm_lang$core$Array$append,
			A2(_elm_lang$core$Array$repeat, n - l, val),
			xs) : xs);
	});
var _elm_community$array_extra$Array_Extra$resizelRepeat = F3(
	function (n, val, xs) {
		var l = _elm_lang$core$Array$length(xs);
		return (_elm_lang$core$Native_Utils.cmp(l, n) > 0) ? A3(_elm_lang$core$Array$slice, 0, n, xs) : ((_elm_lang$core$Native_Utils.cmp(l, n) < 0) ? A2(
			_elm_lang$core$Array$append,
			xs,
			A2(_elm_lang$core$Array$repeat, n - l, val)) : xs);
	});
var _elm_community$array_extra$Array_Extra$removeWhen = F2(
	function (pred, xs) {
		return A2(
			_elm_lang$core$Array$filter,
			function (_p5) {
				return !pred(_p5);
			},
			xs);
	});
var _elm_community$array_extra$Array_Extra$filterMap = F2(
	function (f, xs) {
		var maybePush = F3(
			function (f, mx, xs) {
				var _p6 = f(mx);
				if (_p6.ctor === 'Just') {
					return A2(_elm_lang$core$Array$push, _p6._0, xs);
				} else {
					return xs;
				}
			});
		return A3(
			_elm_lang$core$Array$foldl,
			maybePush(f),
			_elm_lang$core$Array$empty,
			xs);
	});
var _elm_community$array_extra$Array_Extra$getUnsafe = F2(
	function (n, xs) {
		var _p7 = A2(_elm_lang$core$Array$get, n, xs);
		if (_p7.ctor === 'Just') {
			return _p7._0;
		} else {
			return _elm_lang$core$Native_Utils.crashCase(
				'Array.Extra',
				{
					start: {line: 73, column: 5},
					end: {line: 78, column: 125}
				},
				_p7)(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Index ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(n),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' of Array with length ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(
									_elm_lang$core$Array$length(xs)),
								' is not reachable.')))));
		}
	});
var _elm_community$array_extra$Array_Extra$apply = F2(
	function (fs, xs) {
		var l = A2(
			_elm_lang$core$Basics$min,
			_elm_lang$core$Array$length(fs),
			_elm_lang$core$Array$length(xs));
		var fs_ = A3(_elm_lang$core$Array$slice, 0, l, fs);
		return A2(
			_elm_lang$core$Array$indexedMap,
			F2(
				function (n, f) {
					return f(
						A2(_elm_community$array_extra$Array_Extra$getUnsafe, n, xs));
				}),
			fs_);
	});
var _elm_community$array_extra$Array_Extra$map2 = F2(
	function (f, ws) {
		return _elm_community$array_extra$Array_Extra$apply(
			A2(_elm_lang$core$Array$map, f, ws));
	});
var _elm_community$array_extra$Array_Extra$zip = _elm_community$array_extra$Array_Extra$map2(
	F2(
		function (v0, v1) {
			return {ctor: '_Tuple2', _0: v0, _1: v1};
		}));
var _elm_community$array_extra$Array_Extra$map3 = F3(
	function (f, ws, xs) {
		return _elm_community$array_extra$Array_Extra$apply(
			A3(_elm_community$array_extra$Array_Extra$map2, f, ws, xs));
	});
var _elm_community$array_extra$Array_Extra$zip3 = _elm_community$array_extra$Array_Extra$map3(
	F3(
		function (v0, v1, v2) {
			return {ctor: '_Tuple3', _0: v0, _1: v1, _2: v2};
		}));
var _elm_community$array_extra$Array_Extra$map4 = F4(
	function (f, ws, xs, ys) {
		return _elm_community$array_extra$Array_Extra$apply(
			A4(_elm_community$array_extra$Array_Extra$map3, f, ws, xs, ys));
	});
var _elm_community$array_extra$Array_Extra$zip4 = _elm_community$array_extra$Array_Extra$map4(
	F4(
		function (v0, v1, v2, v3) {
			return {ctor: '_Tuple4', _0: v0, _1: v1, _2: v2, _3: v3};
		}));
var _elm_community$array_extra$Array_Extra$map5 = F5(
	function (f, ws, xs, ys, zs) {
		return _elm_community$array_extra$Array_Extra$apply(
			A5(_elm_community$array_extra$Array_Extra$map4, f, ws, xs, ys, zs));
	});
var _elm_community$array_extra$Array_Extra$zip5 = _elm_community$array_extra$Array_Extra$map5(
	F5(
		function (v0, v1, v2, v3, v4) {
			return {ctor: '_Tuple5', _0: v0, _1: v1, _2: v2, _3: v3, _4: v4};
		}));
var _elm_community$array_extra$Array_Extra$sliceUntil = F2(
	function (n, a) {
		return (_elm_lang$core$Native_Utils.cmp(n, 0) > -1) ? A3(_elm_lang$core$Array$slice, 0, n, a) : A3(
			_elm_lang$core$Array$slice,
			0,
			_elm_lang$core$Array$length(a) + n,
			a);
	});
var _elm_community$array_extra$Array_Extra$sliceFrom = F2(
	function (n, a) {
		return A3(
			_elm_lang$core$Array$slice,
			n,
			_elm_lang$core$Array$length(a),
			a);
	});
var _elm_community$array_extra$Array_Extra$update = F3(
	function (n, f, a) {
		var element = A2(_elm_lang$core$Array$get, n, a);
		var _p9 = element;
		if (_p9.ctor === 'Nothing') {
			return a;
		} else {
			return A3(
				_elm_lang$core$Array$set,
				n,
				f(_p9._0),
				a);
		}
	});
